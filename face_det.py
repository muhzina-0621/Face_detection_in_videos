# -*- coding: utf-8 -*-
"""face_det.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gDVgakKdq2m4KQOjNcl6ZjSLdl56looe
"""

# Install OpenCV
!pip install opencv-python-headless

import cv2
from google.colab.patches import cv2_imshow

# Initialize video reader and writer
videoFileReader = cv2.VideoCapture('/input/crowd.mp4')
frame_width = int(videoFileReader.get(cv2.CAP_PROP_FRAME_WIDTH))
frame_height = int(videoFileReader.get(cv2.CAP_PROP_FRAME_HEIGHT))
fps = int(videoFileReader.get(cv2.CAP_PROP_FPS))
myVideo = cv2.VideoWriter('face_det.avi', cv2.VideoWriter_fourcc('M','J','P','G'), fps, (frame_width, frame_height))

# Initialize face detector
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

while videoFileReader.isOpened():
    ret, frame = videoFileReader.read()
    if not ret:
        break

    # Convert frame to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # Draw rectangles around faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 255), 3)

    # Display the resulting frame
    cv2_imshow(frame)

    # Write the frame to the output video
    myVideo.write(frame)

    # Break the loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video reader and writer
videoFileReader.release()
myVideo.release()

# Close all OpenCV windows
cv2.destroyAllWindows()

from google.colab import drive
drive.mount('/output')

